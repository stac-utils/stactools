[metadata]
name = stactools
version = attr: stactools.core.__version__
description = Command line tool and Python library for working with STAC
long_description = file: README.md
long_description_content_type = text/markdown
author = stac-utils
author_email = stac@radiant.earth
url = https://github.com/stac-utils/stactools
project_urls =
    Documentation = https://stactools.readthedocs.io/en/latest/
    Issues = https://github.com/stac-utils/stactools/issues
keywords =
    stactools
    pystac
    imagery
    raster
    catalog
    STAC
classifiers =
    Development Status :: 4 - Beta
    License :: OSI Approved :: Apache Software License
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11

[options]
package_dir =
    = src
packages = find_namespace:
zip_safe = False
include_package_data = True
python_requires = >= 3.8
install_requires =
    Shapely >= 1.8.5.post1
    aiohttp >= 3.8.3
    click >= 8.1.3
    fsspec >= 2021.7
    # Long story.
    #
    # - stac-check 1.3.1 depends on a beta version of jsonschema
    # - jsonschema released an alpha version of 4.18 that thinks that schemas
    #   with empty fragments are invalid
    # - Pretty much all the STAC schemas have empty fragments
    # - Because stac-check depends on a pre-release, this enables pre-releases
    #   of jsonschema for any python environment w/ stac-check
    #
    # Until this is resolved (https://github.com/stac-utils/stac-check/pull/105)
    # we need to ceil our jsonschema version so we don't break environments
    # downstream.
    #
    # - @gadomski 2023-03-23
    jsonschema >= 4.0.1, < 4.18
    lxml >= 4.9.2
    numpy >= 1.22.0
    pyproj >= 3.3
    pystac[validation] >= 1.6.1
    rasterio >= 1.3.2
    requests >= 2.27.1
    stac-check >= 1.2.0
    stac-validator >= 3.1.0

[options.extras_require]
all =
    %(s3)s
s3 =
    s3fs >= 2021.7

[options.packages.find]
where = src

[options.package_data]
* = py.typed

[options.entry_points]
console_scripts =
    stac = stactools.cli.cli:run_cli

[global]
no-binary = rasterio
